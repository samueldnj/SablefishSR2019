install.packages("yaml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_pdf",
config_file = "_bookdown.yml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_bookdown.yml")
# TandF into pdf and docx
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_pdf",
config_file = "_tandf.yml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_tandf.yml")
# Appendices
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_pdf",
config_file = "_appendices.yml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_appendices.yml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_tandf.yml")
source(here::here("mseRtools.r"))
here()
install.packages("here")
install.packages("here")
here()
library(here)
here()
here
source(here::here("mseRtools.r"))
# read in mcmc output
mcmc    <- as.mcmc(read.table ("./data/mcoutMSY.dat", header = TRUE) )
library(knitr)
if (is_latex_output()) {
knitr_figs_dir <- "knitr-figs-pdf"
knitr_cache_dir <- "knitr-cache-pdf"
fig_out_type <- "png"
kable_format <- "latex"
} else {
knitr_figs_dir <- "knitr-figs-docx"
knitr_cache_dir <- "knitr-cache-docx"
fig_out_type <- "png"
kable_format <- "pandoc"
}
fig_asp <- 0.618
fig_width <- 9
fig_out_width <- "6in"
fig_dpi <- 180
fig_align <- "center"
fig_pos <- "htb"
opts_chunk$set(
collapse = TRUE,
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = knitr_figs_dir,
cache.path = knitr_cache_dir,
fig.asp = fig_asp,
fig.width = fig_width,
out.width = fig_out_width,
echo = FALSE,
#  autodep = TRUE,
#  cache = TRUE,
cache.comments = FALSE,
dev = fig_out_type,
dpi = fig_dpi,
fig.align = fig_align,
fig.pos = fig_pos
)
options(xtable.comment = FALSE)
options(kableExtra.latex.load_packages = FALSE)
options(knitr.kable.NA = '')
library(csasdown)
library(kableExtra)
library(tidyverse)
library(coda)
library(MASS)
library(chemometrics)
library(mvtnorm)
# read in mcmc output
mcmc    <- as.mcmc(read.table ("./data/mcoutMSY.dat", header = TRUE) )
source(here::here("mseRtools.r"))
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_tandf.yml")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_word",
config_file = "_bookdown.yml")
cranPackages <- c("coda",
"tidyverse",
"reshape2",
"ggforce",
"ggplot2",
"GGally",
"TMB",
"raster",
"grid",
"RColorBrewer",
# "HapEstXXR",
"parallel",
"stringr",
"wesanderson",
"scales",
"beepr",
"tmbstan",
"here",
"bookdown",
"kableExtra" ,
"ggridges",
"corrplot")
for( pkg in cranPackages )
while(!require(pkg, character.only = TRUE) )
install.packages( pkg, repos = "https://mirror.its.sfu.ca/mirror/CRAN/" )
githubPackages <- c(ggsidekick = "seananderson/ggsidekick",
csasdown = "pbs-assess/csasdown" )
for( pkgIdx in 1:length(githubPackages) )
while(!require(names(githubPackages)[pkgIdx], character.only = TRUE))
devtools::install_github(githubPackages[pkgIdx])
install.packages("devtools")
cranPackages <- c("coda",
"tidyverse",
"reshape2",
"ggforce",
"ggplot2",
"GGally",
"TMB",
"raster",
"grid",
"RColorBrewer",
# "HapEstXXR",
"parallel",
"stringr",
"wesanderson",
"scales",
"beepr",
"tmbstan",
"here",
"bookdown",
"kableExtra" ,
"ggridges",
"corrplot")
for( pkg in cranPackages )
while(!require(pkg, character.only = TRUE) )
install.packages( pkg, repos = "https://mirror.its.sfu.ca/mirror/CRAN/" )
githubPackages <- c(ggsidekick = "seananderson/ggsidekick",
csasdown = "pbs-assess/csasdown" )
for( pkgIdx in 1:length(githubPackages) )
while(!require(names(githubPackages)[pkgIdx], character.only = TRUE))
devtools::install_github(githubPackages[pkgIdx])
install.packages("ggsidekick")
install.packages("ggsidekick")
install.packages("csasdown")
bookdown::render_book(  input = "index.Rmd",
clean = TRUE,
output_format = "csasdown::sr_pdf",
config_file = "_bookdown.yml")
here:here
install.packages("here")
install.packages("here")
library(knitr)
if (is_latex_output()) {
knitr_figs_dir <- "knitr-figs-pdf"
knitr_cache_dir <- "knitr-cache-pdf"
fig_out_type <- "png"
kable_format <- "latex"
} else {
knitr_figs_dir <- "knitr-figs-docx"
knitr_cache_dir <- "knitr-cache-docx"
fig_out_type <- "png"
kable_format <- "pandoc"
}
fig_asp <- 0.618
fig_width <- 9
fig_out_width <- "6in"
fig_dpi <- 180
fig_align <- "center"
fig_pos <- "htb"
opts_chunk$set(
collapse = TRUE,
warning = FALSE,
message = FALSE,
comment = "#>",
fig.path = knitr_figs_dir,
cache.path = knitr_cache_dir,
fig.asp = fig_asp,
fig.width = fig_width,
out.width = fig_out_width,
echo = FALSE,
#  autodep = TRUE,
#  cache = TRUE,
cache.comments = FALSE,
dev = fig_out_type,
dpi = fig_dpi,
fig.align = fig_align,
fig.pos = fig_pos
)
options(xtable.comment = FALSE)
options(kableExtra.latex.load_packages = FALSE)
options(knitr.kable.NA = '')
source(here::here("mseRtools.r"))
source(here::here("mseRtools.r"))
